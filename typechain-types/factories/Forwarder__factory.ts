/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Forwarder, ForwarderInterface } from "../Forwarder";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Forwarder.ForwardRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "executeDelegate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Forwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b506040518060400160405280600981526020017f466f7277617264657200000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f302e302e3100000000000000000000000000000000000000000000000000000081525060008280519060200120905060008280519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90508260e081815250508161010081815250504660a08181525050620000e88184846200013760201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505080610120818152505050505050506200024b565b6000838383463060405160200162000154959493929190620001ee565b6040516020818303038152906040528051906020012090509392505050565b6000819050919050565b620001888162000173565b82525050565b6000819050919050565b620001a3816200018e565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001d682620001a9565b9050919050565b620001e881620001c9565b82525050565b600060a0820190506200020560008301886200017d565b6200021460208301876200017d565b6200022360408301866200017d565b62000232606083018562000198565b620002416080830184620001dd565b9695505050505050565b60805160a05160c05160e05161010051610120516113d36200029b6000396000610562015260006105a401526000610583015260006104b80152600061050e0152600061053701526113d36000f3fe6080604052600436106100345760003560e01c80632d0335ab14610039578063bf5d3bdb14610076578063c08b3f81146100b3575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610a67565b6100e4565b60405161006d9190610aad565b60405180910390f35b34801561008257600080fd5b5061009d60048036038101906100989190610b51565b61012c565b6040516100aa9190610be8565b60405180910390f35b6100cd60048036038101906100c89190610b51565b6102e1565b6040516100db929190610c9c565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008061023584848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506102277fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e488860000160208101906101ae9190610a67565b8960200160208101906101c19190610a67565b8a604001358b606001358c608001358d8060a001906101e09190610cdb565b6040516101ee929190610d7d565b604051809103902060405160200161020c9796959493929190610dbe565b60405160208183030381529060405280519060200120610473565b61048d90919063ffffffff16565b905084608001356000808760000160208101906102529190610a67565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541480156102d757508460000160208101906102a89190610a67565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b9150509392505050565b600060606102f085858561012c565b61032f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032690610eb0565b60405180910390fd5b600185608001356103409190610eff565b6000808760000160208101906103569190610a67565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808660200160208101906103aa9190610a67565b73ffffffffffffffffffffffffffffffffffffffff1687606001358860400135898060a001906103da9190610cdb565b8b60000160208101906103ed9190610a67565b6040516020016103ff93929190610f9d565b60405160208183030381529060405260405161041b9190610ff8565b600060405180830381858888f193505050503d8060008114610459576040519150601f19603f3d011682016040523d82523d6000602084013e61045e565b606091505b50915091508181935093505050935093915050565b60006104866104806104b4565b836105ce565b9050919050565b600080600061049c8585610601565b915091506104a981610684565b819250505092915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561053057507f000000000000000000000000000000000000000000000000000000000000000046145b1561055d577f000000000000000000000000000000000000000000000000000000000000000090506105cb565b6105c87f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610859565b90505b90565b600082826040516020016105e3929190611087565b60405160208183030381529060405280519060200120905092915050565b6000806041835114156106435760008060006020860151925060408601519150606086015160001a905061063787828585610893565b9450945050505061067d565b6040835114156106745760008060208501519150604085015190506106698683836109a0565b93509350505061067d565b60006002915091505b9250929050565b60006004811115610698576106976110be565b5b8160048111156106ab576106aa6110be565b5b14156106b657610856565b600160048111156106ca576106c96110be565b5b8160048111156106dd576106dc6110be565b5b141561071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071590611139565b60405180910390fd5b60026004811115610732576107316110be565b5b816004811115610745576107446110be565b5b1415610786576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077d906111a5565b60405180910390fd5b6003600481111561079a576107996110be565b5b8160048111156107ad576107ac6110be565b5b14156107ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e590611237565b60405180910390fd5b600480811115610801576108006110be565b5b816004811115610814576108136110be565b5b1415610855576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084c906112c9565b60405180910390fd5b5b50565b600083838346306040516020016108749594939291906112e9565b6040516020818303038152906040528051906020012090509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156108ce576000600391509150610997565b601b8560ff16141580156108e65750601c8560ff1614155b156108f8576000600491509150610997565b60006001878787876040516000815260200160405260405161091d9493929190611358565b6020604051602081039080840390855afa15801561093f573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561098e57600060019250925050610997565b80600092509250505b94509492505050565b60008060007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60001b841690506000601b60ff8660001c901c6109e39190610eff565b90506109f187828885610893565b935093505050935093915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a3482610a09565b9050919050565b610a4481610a29565b8114610a4f57600080fd5b50565b600081359050610a6181610a3b565b92915050565b600060208284031215610a7d57610a7c6109ff565b5b6000610a8b84828501610a52565b91505092915050565b6000819050919050565b610aa781610a94565b82525050565b6000602082019050610ac26000830184610a9e565b92915050565b600080fd5b600060c08284031215610ae357610ae2610ac8565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610b1157610b10610aec565b5b8235905067ffffffffffffffff811115610b2e57610b2d610af1565b5b602083019150836001820283011115610b4a57610b49610af6565b5b9250929050565b600080600060408486031215610b6a57610b696109ff565b5b600084013567ffffffffffffffff811115610b8857610b87610a04565b5b610b9486828701610acd565b935050602084013567ffffffffffffffff811115610bb557610bb4610a04565b5b610bc186828701610afb565b92509250509250925092565b60008115159050919050565b610be281610bcd565b82525050565b6000602082019050610bfd6000830184610bd9565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c3d578082015181840152602081019050610c22565b83811115610c4c576000848401525b50505050565b6000601f19601f8301169050919050565b6000610c6e82610c03565b610c788185610c0e565b9350610c88818560208601610c1f565b610c9181610c52565b840191505092915050565b6000604082019050610cb16000830185610bd9565b8181036020830152610cc38184610c63565b90509392505050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112610cf857610cf7610ccc565b5b80840192508235915067ffffffffffffffff821115610d1a57610d19610cd1565b5b602083019250600182023603831315610d3657610d35610cd6565b5b509250929050565b600081905092915050565b82818337600083830152505050565b6000610d648385610d3e565b9350610d71838584610d49565b82840190509392505050565b6000610d8a828486610d58565b91508190509392505050565b6000819050919050565b610da981610d96565b82525050565b610db881610a29565b82525050565b600060e082019050610dd3600083018a610da0565b610de06020830189610daf565b610ded6040830188610daf565b610dfa6060830187610a9e565b610e076080830186610a9e565b610e1460a0830185610a9e565b610e2160c0830184610da0565b98975050505050505050565b600082825260208201905092915050565b7f466f727761726465723a207369676e617475726520646f6573206e6f74206d6160008201527f7463682072657175657374000000000000000000000000000000000000000000602082015250565b6000610e9a602b83610e2d565b9150610ea582610e3e565b604082019050919050565b60006020820190508181036000830152610ec981610e8d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f0a82610a94565b9150610f1583610a94565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f4a57610f49610ed0565b5b828201905092915050565b60008160601b9050919050565b6000610f6d82610f55565b9050919050565b6000610f7f82610f62565b9050919050565b610f97610f9282610a29565b610f74565b82525050565b6000610faa828587610d58565b9150610fb68284610f86565b601482019150819050949350505050565b6000610fd282610c03565b610fdc8185610d3e565b9350610fec818560208601610c1f565b80840191505092915050565b60006110048284610fc7565b915081905092915050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b600061105060028361100f565b915061105b8261101a565b600282019050919050565b6000819050919050565b61108161107c82610d96565b611066565b82525050565b600061109282611043565b915061109e8285611070565b6020820191506110ae8284611070565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000611123601883610e2d565b915061112e826110ed565b602082019050919050565b6000602082019050818103600083015261115281611116565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b600061118f601f83610e2d565b915061119a82611159565b602082019050919050565b600060208201905081810360008301526111be81611182565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000611221602283610e2d565b915061122c826111c5565b604082019050919050565b6000602082019050818103600083015261125081611214565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006112b3602283610e2d565b91506112be82611257565b604082019050919050565b600060208201905081810360008301526112e2816112a6565b9050919050565b600060a0820190506112fe6000830188610da0565b61130b6020830187610da0565b6113186040830186610da0565b6113256060830185610a9e565b6113326080830184610daf565b9695505050505050565b600060ff82169050919050565b6113528161133c565b82525050565b600060808201905061136d6000830187610da0565b61137a6020830186611349565b6113876040830185610da0565b6113946060830184610da0565b9594505050505056fea2646970667358221220146d17b52d3cf2752fb34dfa24637deeba837e12dfdf1c7330c23944ebb2086a64736f6c63430008090033";

type ForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Forwarder__factory extends ContractFactory {
  constructor(...args: ForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Forwarder> {
    return super.deploy(overrides || {}) as Promise<Forwarder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Forwarder {
    return super.attach(address) as Forwarder;
  }
  override connect(signer: Signer): Forwarder__factory {
    return super.connect(signer) as Forwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForwarderInterface {
    return new utils.Interface(_abi) as ForwarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Forwarder {
    return new Contract(address, _abi, signerOrProvider) as Forwarder;
  }
}
