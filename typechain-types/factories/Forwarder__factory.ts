/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Forwarder, ForwarderInterface } from "../Forwarder";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Forwarder.ForwardRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "executeDelegate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610669806100206000396000f3fe6080604052600436106100295760003560e01c80632d0335ab1461002e578063bfbf2f821461006b575b600080fd5b34801561003a57600080fd5b5061005560048036038101906100509190610291565b61009c565b60405161006291906102d7565b60405180910390f35b61008560048036038101906100809190610316565b6100e4565b604051610093929190610413565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006060600183608001356100f99190610472565b60008085600001602081019061010f9190610291565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808460200160208101906101639190610291565b73ffffffffffffffffffffffffffffffffffffffff1685606001358660400135878060a0019061019391906104d7565b8960000160208101906101a69190610291565b6040516020016101b8939291906105c1565b6040516020818303038152906040526040516101d4919061061c565b600060405180830381858888f193505050503d8060008114610212576040519150601f19603f3d011682016040523d82523d6000602084013e610217565b606091505b50915091508181935093505050915091565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061025e82610233565b9050919050565b61026e81610253565b811461027957600080fd5b50565b60008135905061028b81610265565b92915050565b6000602082840312156102a7576102a6610229565b5b60006102b58482850161027c565b91505092915050565b6000819050919050565b6102d1816102be565b82525050565b60006020820190506102ec60008301846102c8565b92915050565b600080fd5b600060c0828403121561030d5761030c6102f2565b5b81905092915050565b60006020828403121561032c5761032b610229565b5b600082013567ffffffffffffffff81111561034a5761034961022e565b5b610356848285016102f7565b91505092915050565b60008115159050919050565b6103748161035f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103b4578082015181840152602081019050610399565b838111156103c3576000848401525b50505050565b6000601f19601f8301169050919050565b60006103e58261037a565b6103ef8185610385565b93506103ff818560208601610396565b610408816103c9565b840191505092915050565b6000604082019050610428600083018561036b565b818103602083015261043a81846103da565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061047d826102be565b9150610488836102be565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104bd576104bc610443565b5b828201905092915050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126104f4576104f36104c8565b5b80840192508235915067ffffffffffffffff821115610516576105156104cd565b5b602083019250600182023603831315610532576105316104d2565b5b509250929050565b600081905092915050565b82818337600083830152505050565b6000610560838561053a565b935061056d838584610545565b82840190509392505050565b60008160601b9050919050565b600061059182610579565b9050919050565b60006105a382610586565b9050919050565b6105bb6105b682610253565b610598565b82525050565b60006105ce828587610554565b91506105da82846105aa565b601482019150819050949350505050565b60006105f68261037a565b610600818561053a565b9350610610818560208601610396565b80840191505092915050565b600061062882846105eb565b91508190509291505056fea26469706673582212209e2f5cb5292f4ab3af2d87fef2bd50a94a64ee1dd5cfd9d7dc0bcbbdd6db30db64736f6c63430008090033";

type ForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Forwarder__factory extends ContractFactory {
  constructor(...args: ForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Forwarder> {
    return super.deploy(overrides || {}) as Promise<Forwarder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Forwarder {
    return super.attach(address) as Forwarder;
  }
  override connect(signer: Signer): Forwarder__factory {
    return super.connect(signer) as Forwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForwarderInterface {
    return new utils.Interface(_abi) as ForwarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Forwarder {
    return new Contract(address, _abi, signerOrProvider) as Forwarder;
  }
}
